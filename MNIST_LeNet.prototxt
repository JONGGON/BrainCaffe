name: "LeNet"
layer {
        name: "mnist"
        type: "Data"
        include { phase: TRAIN }
        transform_param {
                scale:0.00390625
        }
        data_param {
                source: "/home/dl1/b589080/CaffeLab/caffe/MyWork/MNIST/mnist_train_lmdb"
                backend: LMDB
                batch_size: 64
        }
        top: "data"
        top: "label"
}
layer {
        name: "mnist"
        type: "Data"
        include { phase: TEST }
        transform_param {
                scale:0.00390625
        }
        data_param {
                source: "/home/dl1/b589080/CaffeLab/caffe/MyWork/MNIST/mnist_test_lmdb"
                backend: LMDB
                batch_size: 100
        }
        top: "data"
        top: "label"
}
layer {
        name: "conv1"
        type: "Convolution"
        param { lr_mult: 1 }
        param { lr_mult: 2 }
        convolution_param {
                num_output: 20
                kernel_size: 5
                stride: 1
                weight_filler { type:"xavier" }
                bias_filler { type: "constant" }
        }
        bottom: "data"
        top: "conv1"
}
layer {
        name: "pool1"
        type: "Pooling"
        pooling_param {
                kernel_size: 2
                stride: 2
                pool: MAX
        }
        bottom: "conv1"
        top: "pool1"
}
layer {
        name: "conv2"
        type: "Convolution"
        bottom: "pool1"
        top: "conv2"
        param { lr_mult: 1 }
        param { lr_mult: 2 }
        convolution_param {
                num_output: 50
                kernel_size: 5
                stride: 1
                weight_filler { type: "xavier" }
                bias_filler { type: "constant" }
        }
}
layer {
        name: "pool2"
        type: "Pooling"
        bottom: "conv2"
        top: "pool2"
        pooling_param {
                kernel_size: 2
                stride: 2
                pool: MAX
        }
}
layer {
        name: "ip1"
        type: "InnerProduct"
        param { lr_mult:1 }
        param { lr_mult:2 }
        inner_product_param {
                num_output: 500
                weight_filler { type: "xavier" }
                bias_filler { type: "constant" }
        }
        bottom: "pool2"
        top: "ip1"
}
layer {
        name: "relu1"
        type: "ReLU"
        bottom: "ip1"
        top: "ip1"
}
layer {
        name: "ip2"
        type: "InnerProduct"
        param { lr_mult:1 }
        param { lr_mult:2 }
        inner_product_param {
                num_output: 10
                weight_filler { type: "xavier" }
                bias_filler { type: "constant" }
        }
        bottom: "ip1"
        top: "ip2"
}
layer {
        name: "loss"
        type: "SoftmaxWithLoss"
        bottom: "ip2"
        bottom: "label"
        top: "loss"
}

layer {
        name: "accuracy"
        type: "Accuracy"
        include: { phase: TEST }
        bottom: "ip2"
        bottom: "label"
        top: "accuracy"
}
